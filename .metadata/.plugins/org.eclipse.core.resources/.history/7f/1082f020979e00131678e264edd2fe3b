import java.io.IOException;


public class encode {

	public static void main(String[] args) {
		
		byte[] buf = new byte[3];
		int read = -1;
		int maxChars = 76;
		int numChars = 0;
		
		try {
			//read input in 24 bit pieces
			while ((read = System.in.read(buf)) == 3) {
				//encode and write to output
				System.out.write(encode(buf));
				
				//add newline if max line length is reached
				numChars += 4;
				if (numChars == maxChars) {
					System.out.print('\n');
					numChars = 0;
				}
			}
			
			//handle any trailing bits (non-multiples of 24)
			switch (read) {
			case -1: case 0:
				if (numChars > 0)
					System.out.print('\n');
				break;
			case 1:
				//TODO
				break;
			case 2:
				//TODO
				break;
				
			}
			
		} catch (IOException e) {
			// fail with no exception
		}
	}

	//takes in an array of 3 bytes and converts to 4 encoded bytes
	private static byte[] encode(byte[] buf) {
		byte[] out = new byte[4];
		
		//get first 6 bits of byte 1
		out[0] = toAscii(buf[0] >> 2);
		
		//get last 2 bits of byte 1 and first 4 bits of byte 2
		int b1 = (buf[0] << 4) ^ 0x30;
		int b2 = buf[1] >> 4;
		out[1] = toAscii(b1 & b2);
		
		//TODO
		return out;
	}

	//takes an int representing a base-64 encoded byte (between 0 and 63)
	//and convert to an ascii byte
	private static byte toAscii(int b) {
		// TODO Auto-generated method stub
		return 0;
	}

}
